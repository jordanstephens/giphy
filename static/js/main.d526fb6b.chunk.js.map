{"version":3,"sources":["services/giphy.js","configuration.js","features/generator.js","features/trending.js","features/search.js","features/gif.js","reducers.js","configureStore.js","pages/MissingPage.js","components/ContentLoading.js","components/ContentError.js","containers/ContentContainer.js","components/GifList.js","utils/timeago.js","pages/TrendingPage.js","pages/SearchPage.js","components/GifView.js","pages/GifPage.js","routes.js","components/SearchForm.js","components/AppHeader.js","App.js","index.js"],"names":["Giphy","api_key","Object","classCallCheck","this","host","options","get","id","concat","pathname","arguments","length","undefined","params","objectSpread","query","QueryString","stringify","keys","reduce","acc","k","encodeURIComponent","window","fetch","then","response","ok","Error","statusText","json","environments","resolve","definition","development","process","test","production","page_size","page_bumper_ratio","grid_gutter_px","grid_column_width_px","grid_padding_px","overscan_px","max_fill_screen_loads","fill_screen_interval","fill_screen_timeout","colors","value","some","env","hasOwnProperty","queue","async","task","callback","_len","args","Array","_key","apply","error","generate","prefix","fetcher","ACTION","FETCH_REQUESTED","FETCH_SUCCEEDED","FETCH_FAILED","RESET","INITIAL_STATE","offset","loading","gifs","reducer","state","action","type","payload","toConsumableArray","page","data","actions","loadNextPage","dispatch","getState","Promise","reject","push","limit","configuration","setFetchRequested","setPageLoadSucceeded","catch","setPageLoadFailed","reset","giphy","opts","trending","search","loadGif","gif","reducers","history","combineReducers","router","connectRouter","createBrowserHistory","MissingPage","react_default","a","createElement","ContentLoading","ContentError","_ref","message","ContentContainer","children","react","src_components_ContentLoading","src_components_ContentError","GifList","props","_this","possibleConstructorReturn","getPrototypeOf","call","_masonry","_columnCount","_cache","CellMeasurerCache","defaultWidth","defaultHeight","fixedWidth","_onResize","bind","assertThisInitialized","_cellRenderer","_updateColumnCount","_resetCellPositioner","_setMasonryRef","_initCellPositioner","_checkScrollBottom","loadInterval","loadTimer","_this2","count","setTimeout","setInterval","clearInterval","clearTimeout","contentHeight","document","body","clientHeight","threshold","innerHeight","onScrollBottom","Math","floor","_width","_cellPositioner","createMasonryCellPositioner","cellMeasurerCache","columnCount","columnWidth","spacer","width","recomputeCellPositions","index","key","parent","style","image","images","fixed_width","backgroundColor","charCodeAt","dist_es","cache","className","react_router_dom","to","srcSet","webp","src","url","alt","title","height","original","timeago","import_datetime","_this3","_this$props","overscanByPixels","_ref2","isScrolling","onChildScroll","scrollTop","_height","_scrollTop","disableHeight","onResize","_ref3","autoHeight","cellCount","cellPositioner","cellRenderer","ref","onScroll","_args$","scrollHeight","React","PureComponent","defaultProps","TrendingPage","loadMore","containers_ContentContainer","GifList_GifList","Component","connect","bindActionCreators","trendingActions","SearchPage","location","q","parse","slice","nextProps","_this$props2","nextLocation","_this$props3","_this$props4","searchActions","GifView","href","source","target","rel","source_tld","rating","toUpperCase","Date","toLocaleDateString","filesize","size","frames","GifPage","match","src_components_GifView","gifActions","routes","react_router","exact","path","component","render","_QueryString$parse","dest","p","filter","x","join","SearchForm","onSubmit","onChange","event","setState","name","placeholder","AppHeader","onSearch","src_components_SearchForm","esm","src_components_AppHeader","decodeURIComponent","preventDefault","store","preloadedState","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","createRootReducer","applyMiddleware","thunk","routerMiddleware","configureStore","ReactDOM","react_hot_loader","es","src_App","getElementById"],"mappings":"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","file":"static/js/main.d526fb6b.chunk.js","sourcesContent":["import QueryString from 'query-string';\n\nexport default class Giphy {\n  constructor(api_key) {\n    this.host = 'https://api.giphy.com';\n    this.api_key = api_key;\n  }\n\n  search(options) {\n    return this.get('/v1/gifs/search', options);\n  }\n\n  trending(options) {\n    return this.get('/v1/gifs/trending', options);\n  }\n\n  gif(id) {\n    return this.get(`/v1/gifs/${id}`);\n  }\n\n  get(pathname, options = {}) {\n    const params = { ...options, api_key: this.api_key };\n    const query = QueryString.stringify(Object.keys(params).reduce((acc, k) => {\n      acc[k] = encodeURIComponent(params[k]);\n      return acc;\n    }, {}));\n    return window.fetch(`${this.host}${pathname}?${query}`)\n      .then((response) => {\n        if (!response.ok) throw new Error(response.statusText);\n        return response;\n      })\n      .then((response) => response.json());\n  }\n}\n","/*global process*/\n\nconst configuration = {\n  api_key: {\n    development: process.env.REACT_APP_API_KEY,\n    test: 'test-api-key',\n    production: process.env.REACT_APP_API_KEY\n  },\n  page_size: 25,\n  // I had a really hard time naming this, but this is how we derive\n  // the distance from the bottom of the page at which we request the\n  // next page of content. We take this fraction of the window height\n  // and use that as the scroll threshold.\n  page_bumper_ratio: 0.2,\n  grid_gutter_px: 10,\n  grid_column_width_px: 200,\n  grid_padding_px: 20,\n  overscan_px: 0,\n  max_fill_screen_loads: 4,\n  fill_screen_interval: 1000,\n  fill_screen_timeout: 1000,\n  colors: ['rgb(0, 255, 153)', 'rgb(0, 204, 255)', 'rgb(153, 251, 255)', 'rgb(255, 102, 102)', 'rgb(255, 243, 92)']\n};\n\nconst environments = ['development', 'test', 'production'];\n\nfunction resolve(definition) {\n  return Object.keys(definition).reduce((acc, k) => {\n    const short = !environments.some((env) => definition[k].hasOwnProperty(env));\n    const value = short ? definition[k] : definition[k][process.env.NODE_ENV];\n    acc[k] = value;\n    return acc;\n  }, {});\n}\n\nexport default resolve(configuration);\n","import async from 'async';\nimport configuration from '../configuration';\n\nconst CONCURRENCY = 1;\nconst queue = async.queue((task, callback) => {\n  task().then(\n    (...args) => callback(null, ...args),\n    (error) => callback(error)\n  );\n}, CONCURRENCY);\n\n\nexport function generate(prefix, fetcher) {\n  const ACTION = {\n    FETCH_REQUESTED: `${prefix}/FETCH_REQUESTED`,\n    FETCH_SUCCEEDED: `${prefix}/FETCH_SUCCEEDED`,\n    FETCH_FAILED: `${prefix}/FETCH_FAILED`,\n    RESET: `${prefix}/RESET`\n  };\n\n  const setFetchRequested = (offset) => ({\n    type: ACTION.FETCH_REQUESTED,\n    payload: { offset }\n  });\n\n  const setPageLoadFailed = (error) => ({\n    type: ACTION.FETCH_FAILED,\n    payload: { error }\n  });\n\n  const setPageLoadSucceeded = (page) => ({\n    type: ACTION.FETCH_SUCCEEDED,\n    payload: { page }\n  });\n\n  const loadNextPage = (options = {}) => (dispatch, getState) => {\n    return new Promise((resolve, reject) => {\n      const task = () => {\n        const limit = configuration.page_size;\n        const state = getState();\n        const offset = state[prefix].offset;\n        dispatch(setFetchRequested(offset + limit));\n        return fetcher({ ...options, offset, limit })\n          .then((page) => dispatch(setPageLoadSucceeded(page)))\n          .catch((error) => dispatch(setPageLoadFailed(error)));\n      };\n\n      queue.push(task, (error, action) => {\n        if (error) return reject(error);\n        resolve(action);\n      });\n    });\n  };\n\n  const reset = () => ({ type: ACTION.RESET });\n\n  const INITIAL_STATE = {\n    offset: 0,\n    loading: false,\n    error: undefined,\n    gifs: []\n  };\n\n  const reducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n    case ACTION.FETCH_REQUESTED:\n      return {\n        ...state,\n        loading: true,\n        error: undefined,\n        offset: state.offset + action.payload.offset,\n      };\n    case ACTION.FETCH_FAILED:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload.error\n      };\n    case ACTION.FETCH_SUCCEEDED:\n      return {\n        ...state,\n        loading: false,\n        error: undefined,\n\n        gifs: [...state.gifs, ...action.payload.page.data],\n      };\n    case ACTION.RESET:\n      return INITIAL_STATE;\n    default:\n      return state;\n    }\n  };\n\n  return {\n    ACTION,\n    INITIAL_STATE,\n    reducer,\n    actions: {\n      loadNextPage,\n      reset\n    }\n  };\n}\n","import Giphy from '../services/giphy';\nimport configuration from '../configuration';\nimport { generate } from './generator';\n\nconst giphy = new Giphy(configuration.api_key);\n\nexport const {\n  actions,\n  reducer\n} = generate('trending', (opts) => giphy.trending(opts));\n","import Giphy from '../services/giphy';\nimport configuration from '../configuration';\nimport { generate } from './generator';\n\nconst giphy = new Giphy(configuration.api_key);\n\nexport const {\n  actions,\n  reducer\n} = generate('search', (opts) => giphy.search(opts));\n","import Giphy from '../services/giphy';\nimport configuration from '../configuration';\n\nconst giphy = new Giphy(configuration.api_key);\n\nconst ACTION = {\n  FETCH_REQUESTED: 'gif/FETCH_REQUESTED',\n  FETCH_SUCCEEDED: 'gif/FETCH_SUCCEEDED',\n  FETCH_FAILED: 'gif/FETCH_FAILED',\n  RESET: 'gif/RESET'\n};\n\nconst setFetchRequested = () => ({\n  type: ACTION.FETCH_REQUESTED,\n});\n\nconst setPageLoadFailed = (error) => ({\n  type: ACTION.FETCH_FAILED,\n  payload: { error }\n});\n\nconst setPageLoadSucceeded = (gif) => ({\n  type: ACTION.FETCH_SUCCEEDED,\n  payload: { gif }\n});\n\nconst loadGif = (id) => (dispatch) => {\n  dispatch(setFetchRequested());\n  return giphy.gif(id)\n    .then((page) => dispatch(setPageLoadSucceeded(page)))\n    .catch((error) => dispatch(setPageLoadFailed(error)));\n};\n\nconst reset = () => ({ type: ACTION.RESET });\n\nexport const actions = {\n  loadGif,\n  reset\n};\n\nconst INITIAL_STATE = {\n  loading: false,\n  error: undefined,\n  gif: undefined\n};\n\nexport const reducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case ACTION.FETCH_REQUESTED:\n    return {\n      ...state,\n      loading: true,\n      error: undefined,\n    };\n  case ACTION.FETCH_FAILED:\n    return {\n      ...state,\n      loading: false,\n      error: action.payload.error\n    };\n  case ACTION.FETCH_SUCCEEDED:\n    return {\n      ...state,\n      loading: false,\n      error: undefined,\n      gif: action.payload.gif.data,\n    };\n  case ACTION.RESET:\n    return INITIAL_STATE;\n  default:\n    return state;\n  }\n};","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport { reducer as trending } from './features/trending';\nimport { reducer as search } from './features/search';\nimport { reducer as gif } from './features/gif';\n\nexport default (history) => combineReducers({\n  trending,\n  search,\n  gif,\n  router: connectRouter(history)\n});\n","/*global module*/\nimport { createBrowserHistory } from 'history';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { routerMiddleware } from 'connected-react-router';\nimport thunk from 'redux-thunk';\nimport createRootReducer from './reducers';\n\nexport const history = createBrowserHistory();\n\nexport default function configureStore(preloadedState = {}) {\n  const composeEnhancer = (window).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  const store = createStore(\n    createRootReducer(history),\n    preloadedState,\n    composeEnhancer(\n      applyMiddleware(\n        thunk,\n        routerMiddleware(history)\n      )\n    )\n  );\n\n  // Hot reloading\n  if (module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept('./reducers', () => {\n      store.replaceReducer(createRootReducer(history));\n    });\n  }\n\n  return store;\n}","import React from 'react';\n// import PropTypes from 'prop-types';\nimport './MissingPage.css';\n\nconst MissingPage = () => {\n  return (\n    <div>Missing</div>\n  );\n};\n\nMissingPage.propTypes = {};\n\nexport default MissingPage;\n","import React from 'react';\nimport './ContentLoading.css';\n\nconst ContentLoading = () => (\n  <div>Loading</div>\n);\n\nexport default ContentLoading;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './ContentError.css';\n\nconst ContentError = ({ error }) => (\n  <div>{error.message}</div>\n);\n\nContentError.propTypes = {\n  error: PropTypes.shape({\n    message: PropTypes.string.isRequired\n  }).isRequired\n};\n\nexport default ContentError;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport ContentLoading from '../components/ContentLoading';\nimport ContentError from '../components/ContentError';\n\nconst ContentContainer = ({ loading, error, children }) => (\n  <Fragment>\n    {children}\n    {loading ? (\n      <ContentLoading />\n    ) : error ? (\n      <ContentError error={error} />\n    ) : null}\n  </Fragment>\n);\n\nContentContainer.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.shape({}),\n  children: PropTypes.node,\n};\n\nexport default ContentContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport {\n  CellMeasurer,\n  CellMeasurerCache,\n  createMasonryCellPositioner,\n  Masonry,\n  WindowScroller,\n  AutoSizer\n} from 'react-virtualized';\n\nimport { timeago } from '../utils/timeago';\nimport configuration from '../configuration';\n\nimport './GifList.css';\n\nexport default class GifList extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    const { grid_column_width_px } = configuration;\n    this._masonry = undefined;\n    this._columnCount = 0;\n\n    this._cache = new CellMeasurerCache({\n      defaultWidth: grid_column_width_px,\n      defaultHeight: grid_column_width_px,\n      fixedWidth: true,\n    });\n\n    this._onResize = this._onResize.bind(this);\n    this._cellRenderer = this._cellRenderer.bind(this);\n    this._updateColumnCount = this._updateColumnCount.bind(this);\n    this._resetCellPositioner = this._resetCellPositioner.bind(this);\n    this._setMasonryRef = this._setMasonryRef.bind(this);\n    this._initCellPositioner = this._initCellPositioner.bind(this);\n    this._checkScrollBottom = this._checkScrollBottom.bind(this);\n\n    this.loadInterval = undefined;\n    this.loadTimer = undefined;\n  }\n\n  componentDidMount() {\n    // The `setInterval` here is a pretty messy hack to continue to load content\n    // when the window height is greater than the content height. When this is\n    // true, the user can't scroll, and will therefore be forever stuck on the\n    // first page, because new content can never be loaded.\n    // This is further compounded by the fact that the `Masonry` component seems\n    // to have set the content height to be an estimate of the necessary height\n    // when this callback gets called. This estimate can be wildly incorrect,\n    // so we need to wait a short amt of time for the content height to settle\n    // before determining if we need to load new content or not.\n    const {\n      max_fill_screen_loads,\n      fill_screen_timeout,\n      fill_screen_interval\n    } = configuration;\n    let count = 0;\n    window.setTimeout(() => {\n      this.loadInterval = window.setInterval(() => {\n        if (count > max_fill_screen_loads) {\n          return window.clearInterval(this.loadInterval);\n        }\n        if (this._checkScrollBottom()) {\n          window.clearInterval(this.loadInterval);\n        }\n        count++;\n      }, fill_screen_interval);\n    }, fill_screen_timeout);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.loadInterval);\n    window.clearTimeout(this.loadTimer);\n  }\n\n  _checkScrollBottom() {\n    const contentHeight = document.body.clientHeight;\n    const threshold = contentHeight * configuration.page_bumper_ratio;\n    if (contentHeight > window.innerHeight + threshold) return true;\n    this.props.onScrollBottom();\n    return false;\n  }\n\n  _updateColumnCount() {\n    const { grid_gutter_px, grid_column_width_px } = configuration;\n    this._columnCount = Math.floor(\n      this._width / (grid_column_width_px + grid_gutter_px)\n    );\n  }\n\n  _initCellPositioner() {\n    if (typeof this._cellPositioner === 'undefined') {\n      const { grid_gutter_px, grid_column_width_px } = configuration;\n\n      this._cellPositioner = createMasonryCellPositioner({\n        cellMeasurerCache: this._cache,\n        columnCount: this._columnCount,\n        columnWidth: grid_column_width_px,\n        spacer: grid_gutter_px,\n      });\n    }\n  }\n\n  _onResize(args) {\n    const { width } = args;\n    this._width = width;\n    this._updateColumnCount();\n    this._resetCellPositioner();\n    this._masonry.recomputeCellPositions();\n    this._checkScrollBottom();\n  }\n\n  _cellRenderer ({ index, key, parent, style }) {\n    const gif = this.props.gifs[index];\n    const image = gif.images.fixed_width;\n    const colors = configuration.colors;\n    const backgroundColor = colors[gif.id.charCodeAt('0') % colors.length];\n\n    return (\n      <CellMeasurer cache={this._cache} index={index} key={key} parent={parent}>\n        <div className='gif-container' style={style}>\n          <Link\n            to={`/gif/${gif.id}`}\n            className='gif-container-link'\n          >\n            <picture>\n              <source srcSet={image.webp} type=\"image/webp\" />\n              <img\n                src={image.url}\n                alt={gif.title}\n                height={image.height}\n                width={image.width}\n                style={{ backgroundColor }}\n              />\n            </picture>\n            <div className='hover-overlay'>\n              <h4 className='gif-title'>\n                {gif.title}\n              </h4>\n              <span className='gif-time'>\n                {timeago(gif.import_datetime)}\n              </span>\n            </div>\n          </Link>\n        </div>\n      </CellMeasurer>\n    );\n  }\n\n  render() {\n    const { gifs, onScrollBottom } = this.props;\n    if (!gifs.length) return (\n      <div>There are no results to show</div>\n    );\n    const { overscan_px } = configuration;\n\n    return (\n      <WindowScroller\n        overscanByPixels={overscan_px}\n      >\n        {({ height, isScrolling, onChildScroll, scrollTop }) => {\n          this._height = height;\n          this._scrollTop = scrollTop;\n          return (\n            <AutoSizer\n              disableHeight={true}\n              height={height}\n              onResize={this._onResize}\n              overscanByPixels={overscan_px}\n              scrollTop={scrollTop}\n            >\n              {({ width }) => {\n                this._width = width;\n\n                this._updateColumnCount();\n                this._initCellPositioner();\n\n                return (\n                  <Masonry\n                    autoHeight={true}\n                    cellCount={gifs.length}\n                    cellMeasurerCache={this._cache}\n                    cellPositioner={this._cellPositioner}\n                    cellRenderer={this._cellRenderer}\n                    height={this._height}\n                    overscanByPixels={overscan_px}\n                    ref={this._setMasonryRef}\n                    scrollTop={this._scrollTop}\n                    width={width}\n                    isScrolling={isScrolling}\n                    onScroll={(...args) => {\n                      const [{ clientHeight, scrollHeight }] = args;\n                      const threshold = clientHeight * configuration.page_bumper_ratio;\n                      if (this._scrollTop + clientHeight > scrollHeight - threshold) {\n                        onScrollBottom();\n                      }\n                      onChildScroll(...args);\n                    }}\n                  />\n                );\n              }}\n            </AutoSizer>\n          );\n        }}\n      </WindowScroller>\n    );\n  }\n\n  _resetCellPositioner() {\n    const { grid_gutter_px, grid_column_width_px } = configuration;\n\n    this._cellPositioner.reset({\n      columnCount: this._columnCount,\n      columnWidth: grid_column_width_px,\n      spacer: grid_gutter_px,\n    });\n  }\n\n  _setMasonryRef(ref) {\n    this._masonry = ref;\n  }\n}\n\nGifList.propTypes = {\n  gifs: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    images: PropTypes.shape({\n      fixed_width: PropTypes.shape({\n        url: PropTypes.string.isRequired,\n        webp: PropTypes.string.isRequired,\n        width: PropTypes.string.isRequired,\n        height: PropTypes.string.isRequired,\n      }).isRequired,\n    }).isRequired,\n    import_datetime: PropTypes.string.isRequired,\n  })).isRequired,\n  onScrollBottom: PropTypes.func.isRequired,\n};\n\nGifList.defaultProps = {\n  gifs: []\n};","import original from 'node-time-ago';\n\nexport const timeago = (...args) => original(...args);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { actions as trendingActions } from '../features/trending';\nimport { bindActionCreators } from 'redux';\nimport ContentContainer from '../containers/ContentContainer';\nimport GifList from '../components/GifList';\n\nclass TrendingPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.loadMore = this.loadMore.bind(this);\n  }\n\n  componentDidMount() {\n    const { actions } = this.props;\n    actions.reset();\n    actions.loadNextPage();\n  }\n\n  loadMore() {\n    const { actions } = this.props;\n    actions.loadNextPage();\n  }\n\n  render() {\n    const { gifs, loading, error } = this.props;\n    return (\n      <ContentContainer loading={loading} error={error}>\n        <GifList\n          gifs={gifs}\n          onScrollBottom={this.loadMore}\n        />\n      </ContentContainer>\n    );\n  }\n}\n\nTrendingPage.propTypes = {\n  actions: PropTypes.shape({\n    loadNextPage: PropTypes.func.isRequired,\n    reset: PropTypes.func.isRequired,\n  }).isRequired,\n  gifs: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.shape({})\n};\n\nconst mapStateToProps = ({ trending }) => ({\n  loading: trending.loading,\n  error: trending.error,\n  gifs: trending.gifs\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  actions: bindActionCreators(trendingActions, dispatch),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TrendingPage);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport QueryString from 'query-string';\nimport { connect } from 'react-redux';\nimport { actions as searchActions } from '../features/search';\nimport { bindActionCreators } from 'redux';\nimport ContentContainer from '../containers/ContentContainer';\nimport GifList from '../components/GifList';\n\nclass SearchPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.loadMore = this.loadMore.bind(this);\n  }\n\n  componentDidMount() {\n    const { actions, location } = this.props;\n    const { q } = QueryString.parse(location.search.slice(1));\n    actions.reset();\n    actions.loadNextPage({ q });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { actions, location } = this.props;\n    const { location: nextLocation } = nextProps;\n\n    if (location !== nextLocation) {\n      const { q } = QueryString.parse(nextLocation.search.slice(1));\n      actions.reset();\n      actions.loadNextPage({ q });\n    }\n  }\n\n  loadMore() {\n    const { actions, location } = this.props;\n    const { q } = QueryString.parse(location.search.slice(1));\n    actions.loadNextPage({ q });\n  }\n\n  render() {\n    const { gifs, loading, error } = this.props;\n    return (\n      <ContentContainer loading={loading} error={error}>\n        <GifList\n          gifs={gifs}\n          onScrollBottom={this.loadMore}\n        />\n      </ContentContainer>\n    );\n  }\n}\n\nSearchPage.propTypes = {\n  actions: PropTypes.shape({\n    loadNextPage: PropTypes.func.isRequired,\n    reset: PropTypes.func.isRequired,\n  }).isRequired,\n  location: PropTypes.shape({\n    search: PropTypes.string.isRequired\n  }).isRequired,\n  gifs: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.shape({})\n};\n\nconst mapStateToProps = ({ search }) => ({\n  loading: search.loading,\n  error: search.error,\n  gifs: search.gifs\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  actions: bindActionCreators(searchActions, dispatch),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SearchPage);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport filesize from 'filesize';\nimport configuration from '../configuration';\n\nimport './GifView.css';\n\nconst GifView = ({ gif }) => {\n  if (!gif) return null;\n\n  const image = gif.images.original;\n  const colors = configuration.colors;\n  const backgroundColor = colors[gif.id.charCodeAt('0') % colors.length];\n\n  return (\n    <section>\n      <div>\n        <header>\n          <h2>{gif.title}</h2>\n        </header>\n        <main>\n          <picture>\n            <source srcSet={image.webp} type=\"image/webp\" />\n            <img\n              src={image.url}\n              alt={gif.title}\n              height={image.height}\n              width={image.width}\n              style={{ backgroundColor }}\n              className='gif'\n            />\n          </picture>\n        </main>\n      </div>\n      <footer>\n        <dl className='gif-info'>\n          <dt>Source</dt>\n          <dd>\n            <a\n              href={gif.source}\n              target='_blank'\n              rel='noopener noreferrer'\n            >\n              {gif.source_tld}\n            </a>\n          </dd>\n          <dt>Rating</dt>\n          <dd>{gif.rating.toUpperCase()}</dd>\n          <dt>Uploaded</dt>\n          <dd>{new Date(gif.import_datetime).toLocaleDateString()}</dd>\n          <dt>Dimensions</dt>\n          <dd>{image.width} x {image.height} px</dd>\n          <dt>Size</dt>\n          <dd>{filesize(image.size)}</dd>\n          <dt>Frames</dt>\n          <dd>{image.frames}</dd>\n        </dl>\n      </footer>\n    </section>\n  );\n};\n\nGifView.propTypes = {\n  gif: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    rating: PropTypes.string.isRequired,\n    source: PropTypes.string.isRequired,\n    source_tld: PropTypes.string.isRequired,\n    import_datetime: PropTypes.string.isRequired,\n    images: PropTypes.shape({\n      original: PropTypes.shape({\n        webp: PropTypes.string.isRequired,\n        url: PropTypes.string.isRequired,\n        width: PropTypes.string.isRequired,\n        height: PropTypes.string.isRequired,\n        size: PropTypes.string.isRequired,\n        frames: PropTypes.string.isRequired,\n      }).isRequired,\n    }).isRequired,\n  }),\n};\n\nexport default GifView;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { actions as gifActions } from '../features/gif';\nimport { bindActionCreators } from 'redux';\nimport ContentContainer from '../containers/ContentContainer';\nimport GifView from '../components/GifView';\n\nclass GifPage extends React.Component {\n  componentDidMount() {\n    const { actions, match } = this.props;\n\n    actions.reset();\n    actions.loadGif(match.params.id);\n  }\n\n  render() {\n    const { gif, loading, error } = this.props;\n    return (\n      <ContentContainer loading={loading} error={error}>\n        <GifView gif={gif} />\n      </ContentContainer>\n    );\n  }\n}\n\nGifPage.propTypes = {\n  actions: PropTypes.shape({\n    loadGif: PropTypes.func.isRequired,\n    reset: PropTypes.func.isRequired,\n  }).isRequired,\n  gif: PropTypes.shape({}),\n  loading: PropTypes.bool.isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n  error: PropTypes.shape({})\n};\n\nconst mapStateToProps = ({ gif }) => ({\n  loading: gif.loading,\n  error: gif.error,\n  gif: gif.gif\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  actions: bindActionCreators(gifActions, dispatch),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(GifPage);\n","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router';\nimport QueryString from 'query-string';\nimport MissingPage from './pages/MissingPage';\nimport TrendingPage from './pages/TrendingPage';\nimport SearchPage from './pages/SearchPage';\nimport GifPage from './pages/GifPage';\n\nconst routes = (\n  <Switch>\n    <Route exact path='/' component={TrendingPage} />\n    <Route exact path='/search' component={SearchPage} />\n    <Route exact path='/gif/:id' component={GifPage} />\n    <Route exact path='/redirect' render={({ location }) => {\n      const { p, q } = QueryString.parse(location);\n      const dest = [p, q].filter((x) => x).join('?');\n      return (\n        <Redirect to={`/${dest}`} />\n      );\n    }} />\n    <Route component={MissingPage} />\n  </Switch>\n);\n\nexport default routes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './SearchForm.css';\n\nclass SearchForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      q: this.props.q || ''\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onSubmit(event) {\n    const { q } = this.state;\n    this.props.onSubmit(event, { q });\n  }\n\n  onChange(event) {\n    const q = event.target.value;\n    this.setState({ q });\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.onSubmit} className='search-form'>\n        <input\n          type=\"text\"\n          name=\"q\"\n          value={this.state.q}\n          placeholder='Search GIFs'\n          onChange={this.onChange}\n          className='search-field'\n        />\n        <button type=\"submit\" className='search-button'>\n          Go!\n        </button>\n      </form>\n    );\n  }\n}\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  q: PropTypes.string\n};\n\nexport default SearchForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport SearchForm from './SearchForm';\n\nimport './AppHeader.css';\n\nconst AppHeader = ({ q, onSearch }) => (\n  <div className='header-container'>\n    <h1>\n      <Link to='/'  className='logo'>\n        Giphy\n      </Link>\n    </h1>\n    <SearchForm q={q} onSubmit={onSearch} />\n  </div>\n);\n\nAppHeader.propTypes = {\n  onSearch: PropTypes.func.isRequired,\n  q: PropTypes.string\n};\n\nexport default AppHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport QueryString from 'query-string';\nimport { ConnectedRouter, push } from 'connected-react-router';\nimport routes from './routes';\nimport AppHeader from './components/AppHeader';\nimport './App.css';\n\nfunction App({ push, history }) {\n  const { q } = QueryString.parse(window.location.search.slice(1));\n  return (\n    <ConnectedRouter history={history}>\n      <div className='section-container'>\n        <header className='header-content'>\n          <AppHeader\n            q={q && decodeURIComponent(q)}\n            onSearch={(event, { q }) => {\n              event.preventDefault();\n              push(`/search?q=${encodeURIComponent(q)}`);\n            }}\n          />\n        </header>\n      </div>\n      <div className='section-container'>\n        <main className='main-content'>\n          { routes }\n        </main>\n      </div>\n      <div className='section-container footer'>\n        <div className='footer-border' />\n        <footer className='footer-content'>\n          Giphy Viewer by <a href='https://jordanstephens.com'>@jordanstephens</a>\n        </footer>\n      </div>\n    </ConnectedRouter>\n  );\n}\n\nApp.propTypes = {\n  history: PropTypes.shape().isRequired,\n  push: PropTypes.func.isRequired\n};\n\nexport default connect(null, { push })(App);","/*global module*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { AppContainer } from 'react-hot-loader';\nimport { Provider } from 'react-redux';\nimport configureStore, { history } from './configureStore';\nimport App from './App';\nimport './index.css';\n\nconst store = configureStore();\n\nfunction render() {\n  ReactDOM.render(\n    <AppContainer>\n      <Provider store={store}>\n        <App history={history} />\n      </Provider>\n    </AppContainer>,\n    document.getElementById('root')\n  );\n}\n\nrender();\n\n// Hot reloading\nif (module.hot) {\n  // Reload components\n  module.hot.accept('./App', () => {\n    render();\n  });\n}\n"],"sourceRoot":""}